version: 2
jobs:

  mdl:
    docker:
      - image: rsrchboy/mdl
    steps:
      - checkout
      - run: mdl .

  flake8:
    docker:
      - image: python:2.7
    steps:
      - checkout
      - run: pip install flake8
      - run: flake8 ddldump/

  build_wheel:
    docker:
      - image: circleci/python
    steps:
      - checkout
      - run: mkdir -p build/dist
      - run:
          name: Package the repo into a wheel
          command: python setup.py bdist_wheel --dist-dir build/dist/
      - run: cp ddldump_*.sql build/
      #- run: cp VERSION.txt build/
      #- run: cp ddldump_mysql.sql build/
      - persist_to_workspace:
          root: build
          paths:
            - dist
            #- VERSION.txt
            - ddldump_*.sql

  postgres_python3.7:
    docker:
      - image: circleci/python:3.7-stretch
      - image: circleci/postgres
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Install postgresql-client
          command: |
            apt-get update
            apt-get -y install postgresql-client-9.6
      - run:
          name: Install the newly-packaged wheel
          command: |
            set -eux
            python3 -m ensurepip
            pip3 install /tmp/workspace/dist/*
      - run:
          name: Wait for postgres to come up
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Load ddldump postgres schema
          command: psql -h 127.0.0.1 -U postgres < /tmp/workspace/ddldump_postgres.sql
      - run:
          name: Run ddldump againt the postgres dumpfile
          command: ddldump --diff=/tmp/workspace/ddldump_postgres.sql postgresql://postgres:postgres@127.0.0.1:5432

  postgres_python2.7:
    docker:
      - image: circleci/python:2.7-stretch
      - image: circleci/postgres:9.6.8-alpine
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Install postgresql-client
          command: |
            apt-get update
            apt-get -y install postgresql-client-9.6
      - run:
          name: Install the newly-packaged wheel
          command: pip install /tmp/workspace/dist/*
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for postgres to come up
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Load ddldump postgres schema
          command: psql -h 127.0.0.1 -U postgres < /tmp/workspace/ddldump_postgres.sql
      - run:
          name: Run ddldump againt the postgres dumpfile
          command: ddldump --diff=/tmp/workspace/ddldump_postgres.sql postgresql://postgres:postgres@127.0.0.1:5432

  mysql_python3.7:
    docker:
      - image: circleci/python:3.7-stretch
      - image: circleci/mysql
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Install mysql-client
          command: |
            apt-get update
            apt-get -y install mysql-client
      - run:
          name: Wait for mysql to come up
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      - run:
          name: Set up "ddldump" database
          command: mysql -h 127.0.0.1 -e 'CREATE DATABASE IF NOT EXISTS `ddldump`'
      - run:
          name: Load ddldump mysql schema (with foreign key checks disabled)
          command: ( echo "SET FOREIGN_KEY_CHECKS=0; "; cat /tmp/workspace/ddldump_mysql.sql ) | mysql -h 127.0.0.1 ddldump
      - run:
          name: Install the newly-packaged wheel
          command: |
            set -eux
            python3 -m ensurepip
            pip3 install /tmp/workspace/dist/*
      - run:
          name: Run ddldump against the mysql dumpfile
          command: ddldump --diff=/tmp/workspace/ddldump_mysql.sql mysql://:@127.0.0.1:3306/ddldump

  mysql_python2.7:
    docker:
      - image: circleci/python:2.7-stretch
      - image: circleci/mysql:5.5 # 5.5 is the latest version of mysql-client available on stretch
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Install mysql-client
          command: |
            apt-get update
            apt-get -y install mysql-client
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for mysql to come up
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      - run:
          name: Set up "ddldump" database
          command: mysql -h 127.0.0.1 -e 'CREATE DATABASE IF NOT EXISTS `ddldump`'
      - run:
          name: Load ddldump mysql schema (with foreign key checks disabled)
          command: ( echo "SET FOREIGN_KEY_CHECKS=0; "; cat /tmp/workspace/ddldump_mysql.sql ) | mysql -h 127.0.0.1 ddldump
      - run:
          name: Install the newly-packaged wheel
          command: pip install /tmp/workspace/dist/*
      - run:
          name: Run ddldump against the mysql dumpfile
          command: ddldump --diff=/tmp/workspace/ddldump_mysql.sql mysql://:@127.0.0.1:3306/ddldump

  build_docker_image:
    docker:
      - image: alpine:3.7
    steps:
      - checkout
      - run: apk add --no-cache python3 docker
      - setup_remote_docker
      - run: |
          set +o pipefail
          new_version=$(cat VERSION.txt)
          docker build -t "prclt/ddldump:${new_version}" -f image/Dockerfile .


workflows:
  version: 2
  phaser:
    jobs:
      - mdl
      - flake8
      - build_wheel
      - build_docker_image
      - postgres_python3.7:
          requires:
            - build_wheel
      - postgres_python2.7:
          requires:
            - build_wheel
      - mysql_python3.7:
          requires:
            - build_wheel
      - mysql_python2.7:
          requires:
            - build_wheel
